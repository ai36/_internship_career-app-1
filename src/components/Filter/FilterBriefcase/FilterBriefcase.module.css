.container {
  position: relative;
}

.button {
  display: flex;
  position: relative;
  column-gap: 16px;
  align-items: center;
  transition: var(--transition);
  box-shadow: var(--boxShadowColor);
  border-radius: 16px;
  background-color: var(--bgAccentColor);
  padding-inline: 24px;
  width: 100%;
  height: 48px;
  color: var(--colorGray);
  font-weight: var(--fontWeightBold);
  font-size: var(--textSmall);
  line-height: var(--lineHeightDefault);

  &:hover,
  &:focus {
    background-color: rgba(235, 241, 250, 1);
  }

  /* 
  !!! Несмотря на то, что Саша Ламков рекомендовал этот подход, и я потратил много времени пытаясь заставить это работать, оно все равно не работает, поэтому использую селектор по атрибуту class
  :global(.counter) {
    margin-left: auto;
  }
  */
  [class*=counter] {
    margin-left: auto;
  }

  &:not(:has([class*=counter])) .chevron {
    margin-left: auto;
  }
}  

.activeButton {
  border-radius: 16px 16px 0 0;
  background-color: rgba(235, 241, 250, 1);
  color: var(--colorDefault);
}

.icons {
  width: 16px;
  height: 16px;
}

.chevron {
  transition: var(--transition);
  width: 12px;
  height: 12px;
  fill: var(--colorGray);
}

.activeChevron {
  rotate: 90deg;
  fill: var(--colorDefault);
}

.optionsList {
  display: flex;
  position: absolute;
  row-gap: 4px;
  flex-direction: column;
  opacity: 1;
  z-index: 1;
  transition: var(--transition);
  cursor: default;
  box-shadow: var(--boxShadowColor);
  border-radius: 0 0 16px 16px;
  background-color: var(--bgAccentColor);
  padding: 8px 24px;
  width: 100%;
  overflow: hidden;
  overscroll-behavior: none;
  scrollbar-color: var(--colorAccent) transparent;
  scrollbar-width: thin;
}

.optionsList::-webkit-scrollbar {
  width: 4px;
}

.optionsList::-webkit-scrollbar-thumb {
  border-radius: 7px;
  background-color: var(--colorAccent);
}

.optionsList::-webkit-scrollbar-track {
  background-color: transparent;
}

@media (max-width: 1279px) {
  .container {
    width: 293px;
  }
}
